library(rtweet)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ontcases$Date <- mdy(ontcases$Date)
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
View(ontcases)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
head(ontacases,-1)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
View(ontcases)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases<-ontcases[1:(n-1),]
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases) %>%slice(,1:(n()-1))
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases) %>% filter(row_number() <=n()-1)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-18") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
stl_ontts <-stl(ontts,"periodic")
plot(stl_ontts, main = "Ontario Covid Cases Time Series Decomposition")
ontts_sa<-xts((onttrain$cases -stl_ontts$time.series[,1]), order.by=onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-18") %>% select(Date, cases)
auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases) %>% filter(row_number() <=n()-1)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
#arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases) %>% filter(row_number() <=n()-1)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-01") %>% select(Date, cases)
ontts <-xts(onttrain$cases, onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-11-01") %>% select(Date, cases)
#arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
#arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
arimamodel
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto", start.p=10)
arimamodel
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
arimamodel<-Arima(ontts, order=c(14,1,0), lambda="auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto", start.p=14)
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(14,1,0) Forecast")
arimamodel
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-18") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-11-18") %>% select(Date, cases)
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
View(onteval)
View(plotdata)
rmsecalc<-left_join(onteval,plotdata,by="Date")
View(rmsecalc)
rmsecalc<-left_join(onteval,plotdata,by="Date") %>% mutate(sqerr = (cases-Point.Forecast)^2)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast)
install.packages("Metrics")
library(Metrics)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast) %>% round(digits=3)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast) %>% round(digits=2)
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
library(metrics)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-18") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-11-18") %>% select(Date, cases)
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(4,1,3)x(1,0,1) Forecast")
ggsave("data/covidarima.png", plot=last_plot(),width=8,height=4.5,dpi=200)
rmsecalc<-left_join(onteval,plotdata,by="Date") %>% mutate(sqerr = (cases-Point.Forecast)^2)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast) %>% round(digits=2)
#Tweet the Graph
covidplots_token <- rtweet::create_token(
app = "covidplots",
consumer_key =    Sys.getenv("TWITTER_CONSUMER_API_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_API_SECRET"),
access_token =    Sys.getenv("TWITTER_ACCESS_TOKEN"),
access_secret =   Sys.getenv("TWITTER_ACCESS_TOKEN_SECRET"),
)
post_tweet(paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to",accessed_date), paste("Rolling RMSE is", rmse),
media="data/covidarima.png",
token=covidplots_token)
post_tweet(paste("Rolling RMSE is", rmse),
media="data/covidarima.png",
token=covidplots_token)
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
library(Metrics)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-18") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-11-18") %>% select(Date, cases)
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(4,1,3)x(1,0,1) Forecast")
ggsave("data/covidarima.png", plot=last_plot(),width=8,height=4.5,dpi=200)
rmsecalc<-left_join(onteval,plotdata,by="Date") %>% mutate(sqerr = (cases-Point.Forecast)^2)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast) %>% round(digits=2)
#Tweet the Graph
covidplots_token <- rtweet::create_token(
app = "covidplots",
consumer_key =    Sys.getenv("TWITTER_CONSUMER_API_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_API_SECRET"),
access_token =    Sys.getenv("TWITTER_ACCESS_TOKEN"),
access_secret =   Sys.getenv("TWITTER_ACCESS_TOKEN_SECRET"),
)
post_tweet(paste("Rolling RMSE is", rmse),
media="data/covidarima.png",
token=covidplots_token)
#Tweet the Graph
covidplots_token <- rtweet::create_token(
app = "covidplots",
consumer_key =    Sys.getenv("TWITTER_CONSUMER_API_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_API_SECRET"),
access_token =    Sys.getenv("TWITTER_ACCESS_TOKEN"),
access_secret =   Sys.getenv("TWITTER_ACCESS_TOKEN_SECRET"),
)
post_tweet(paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to",accessed_date),
media="data/covidarima.png",
token=covidplots_token)
covidplots_token
covidplots_token
test<-paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to",accessed_date,".Rolling RMSE is", rmse)
test
test<-paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is", rmse, sep="")
test
test<-paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is ", rmse, sep="")
test
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
library(Metrics)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-11-18") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-11-18") %>% select(Date, cases)
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=28)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=28))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(4,1,3)x(1,0,1) Forecast")
library(tidyverse)
library(zoo)
library(ggthemes)
library(lubridate)
library(xts)
library(forecast)
library(rtweet)
library(Metrics)
accessed_date<-format(as.POSIXlt(Sys.time(), "EST5EDT" ),"%b %d")
ontcases<- read.csv("Full COVID-19 Summary Data for Ontario.csv") %>% rename("cases" = "Change.in.cases") %>% select(Date, cases)
ontcases$Date <- mdy(ontcases$Date)
onttrain <-filter(ontcases, Date <="2021-12-02") %>% select(Date, cases)
ontts <-xts(onttrain$cases, order.by=onttrain$Date)
attr(ontts, 'frequency') <-7
onteval<-filter(ontcases, Date >"2021-12-02") %>% select(Date, cases)
arimamodel<-auto.arima(ontts, stationary = FALSE,  seasonal=TRUE, lambda = "auto")
fc<-forecast(arimamodel,h=14)
plotdata<-data.frame(fc, Date=seq.Date(max(onttrain$Date) + 1, by="1 day", length.out=14))
ggplot() +
geom_line(data=filter(onttrain, Date>"2021-08-01"),aes(x=Date, y=cases), size=1.2, alpha=0.7) +
geom_ribbon(data=plotdata, aes(x=Date,ymin=Lo.95, ymax=Hi.95), fill="mediumorchid1", alpha=0.2) +
geom_line(data=plotdata,aes(x=Date, y=Point.Forecast), color="mediumorchid1", size=1.2) +
geom_line(data=onteval,aes(x=Date, y=cases), color="black", size=1.2, alpha=0.7) +
scale_x_date(breaks = scales::pretty_breaks(n = 12)) +
expand_limits(y=0) +
theme_fivethirtyeight()+
ylab("Ontario Covid Cases") +
ggtitle("COVID-19 Cases Per Day with ARIMA(4,1,3)x(1,0,1) Forecast")
rmsecalc<-left_join(onteval,plotdata,by="Date") %>% mutate(sqerr = (cases-Point.Forecast)^2)
rmse<-rmse(rmsecalc$cases, rmsecalc$Point.Forecast) %>% round(digits=2)
if(rmse ~=NaN){
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is ", rmse, sep="")
} else {
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date, sep="")
}
if(rmse ~=NaN){
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is ", rmse, sep="")
} else {
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date, sep="")
}
x <- -5
if(x > 0){
print("Non-negative number")
} else {
print("Negative number")
}
is.NaN(rmse)
is.nan(rmse)
if(is.nan(rmse)="TRUE"){
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is ", rmse, sep="")
} else {
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date, sep="")
}
if(is.nan(rmse)=="TRUE"){
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date,". Rolling RMSE is ", rmse, sep="")
} else {
paste("Ontario cases forecast from ARIMA(4,1,3)x(1,0,1) model. Model is estimated from Ontario data up to Nov 18, then forecased out 2 weeks.  Black is actual data, purple is forecast with 95% forecast interval. Updated with actual values up to ",accessed_date, sep="")
}
